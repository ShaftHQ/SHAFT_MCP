<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.6</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>io.github.shafthq</groupId>
	<artifactId>SHAFT_MCP</artifactId>
	<version>9.3.20250928</version> <!-- Update this version in Dockerfile, src/main/resources/application.properties, HELP.md, readme.md on every release -->
	<name>SHAFT_MCP</name>
	<description>Agentic SHAFT_Engine with Spring AI</description>
    <url>https://shafthq.github.io/</url>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>Mohab Mohie</name>
            <email>Mohab.MohieElDeen@outlook.com</email>
            <organization>GitHub</organization>
            <organizationUrl>https://github.com/ShaftHQ</organizationUrl>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:https://github.com/ShaftHQ/SHAFT_MCP.git</connection>
        <developerConnection>scm:git:ssh://github.com/ShaftHQ/SHAFT_MCP.git</developerConnection>
        <url>https://github.com/ShaftHQ/SHAFT_MCP</url>
    </scm>
	<properties>
        <commandToPackage>mvn clean package "-DskipTests" "-Dgpg.skip"</commandToPackage>
        <commandToTest>mvn clean test</commandToTest>
		<java.version>21</java.version>
		<spring-ai.version>1.0.3</spring-ai.version>
		<!-- Make sure you point to the latest release version: https://github.com/ShaftHQ/SHAFT_ENGINE/releases -->
		<shaft_engine.version>9.3.20250928</shaft_engine.version>
		<aspectjweaver.version>1.9.24</aspectjweaver.version>
		<maven-compiler-plugin.version>3.14.1</maven-compiler-plugin.version>
		<maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
		<surefire-testng.version>3.5.4</surefire-testng.version>
		<maven-surefire-plugin.version>3.5.4</maven-surefire-plugin.version>
		<junit-jupiter-engine.version>6.0.0</junit-jupiter-engine.version>
        <maven-gpg-plugin.version>3.2.8</maven-gpg-plugin.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-starter-mcp-server</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.github.shafthq</groupId>
			<artifactId>SHAFT_ENGINE</artifactId>
			<version>${shaft_engine.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-to-slf4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>jcl-over-slf4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-slf4j2-impl</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-slf4j2-impl</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectjweaver.version}</version>
		</dependency>

	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.ai</groupId>
				<artifactId>spring-ai-bom</artifactId>
				<version>${spring-ai.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>21</source>
                    <target>21</target>
                    <encoding>UTF-8</encoding>
                    <meminitial>4096m</meminitial>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <outputDirectory>target/classes</outputDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.12.0</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <failOnError>false</failOnError>
                    <show>public</show>
                    <nohelp>true</nohelp>
                    <header>SHAFT_MCP, ${project.version}</header>
                    <doctitle>SHAFT_MCP, ${project.version}</doctitle>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                        </manifest>
                    </archive>
                    <includes>
                        <include>io/**</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.sonatype.central</groupId>
                <artifactId>central-publishing-maven-plugin</artifactId>
                <version>0.9.0</version>
                <extensions>true</extensions>
                <configuration>
                    <publishingServerId>central</publishingServerId>
                    <centralBaseUrl>https://central.sonatype.com</centralBaseUrl>
                    <tokenAuth>true</tokenAuth>
                    <autoPublish>true</autoPublish>
                    <waitUntil>published</waitUntil>
                    <waitMaxTime>3600</waitMaxTime> <!-- one hour -->
                </configuration>
            </plugin>
            <plugin>
                <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-gpg-plugin -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>${maven-gpg-plugin.version}</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                        <configuration>
                            <keyname>${gpg.keyname}</keyname>
                            <passphrase>${gpg.passphrase}</passphrase>
                            <!-- Prevent gpg from using pinentry programs -->
                            <gpgArguments>
                                <arg>--pinentry-mode</arg>
                                <arg>loopback</arg>
                            </gpgArguments>
                            <!-- Follow these steps: https://www.git-tower.com/blog/setting-up-gpg-windows/ -->
                            <!-- In case you get `gpg: skipped "xxxxxx": No secret key` error
                            navigate to where gpg is installed, usually here `C:\Program Files (x86)\GnuPG\bin`
                            then copy/paste/rename `gpg.exe` to `gpg2.exe`
                            run `git config {DASH_DASH}global gpg.program "C:\Program Files (x86)\GnuPG\bin\gpg2.exe"`
                            then try again -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>testng</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven-surefire-plugin.version}</version>
						<dependencies>
							<dependency>
								<groupId>org.apache.maven.surefire</groupId>
								<artifactId>surefire-testng</artifactId>
								<version>${surefire-testng.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<systemPropertyVariables>
								<testng.dtd.http>true</testng.dtd.http>
							</systemPropertyVariables>
							<failIfNoSpecifiedTests>false</failIfNoSpecifiedTests>
							<failIfNoTests>false</failIfNoTests>
							<trimStackTrace>false</trimStackTrace>
							<useFile>false</useFile>
							<encoding>UTF-8</encoding>
							<argLine>
								-javaagent:${user.home}/.m2/repository/org/aspectj/aspectjweaver/${aspectjweaver.version}/aspectjweaver-${aspectjweaver.version}.jar
							</argLine>
							<properties>
								<property>
									<name>usedefaultlisteners</name>
									<value>false</value>
								</property>
								<property>
									<name>listener</name>
									<value>com.shaft.listeners.TestNGListener</value>
								</property>
							</properties>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>junit</id>
			<activation>
				<file>
					<missing>src/test/resources/META-INF/services/org.testng.ITestNGListener</missing>
					<exists>src/test/resources/META-INF/services/org.junit.platform.launcher.LauncherSessionListener</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>${maven-surefire-plugin.version}</version>
						<dependencies>
							<dependency>
								<groupId>org.junit.jupiter</groupId>
								<artifactId>junit-jupiter-engine</artifactId>
								<version>${junit-jupiter-engine.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<systemPropertyVariables>
								<testng.dtd.http>true</testng.dtd.http>
							</systemPropertyVariables>
							<failIfNoSpecifiedTests>false</failIfNoSpecifiedTests>
							<failIfNoTests>false</failIfNoTests>
							<trimStackTrace>false</trimStackTrace>
							<useFile>false</useFile>
							<encoding>UTF-8</encoding>
							<argLine>
								-javaagent:${user.home}/.m2/repository/org/aspectj/aspectjweaver/${aspectjweaver.version}/aspectjweaver-${aspectjweaver.version}.jar
							</argLine>
							<properties>
								<property>
									<name>usedefaultlisteners</name>
									<value>false</value>
								</property>
								<property>
									<name>listener</name>
									<value>com.shaft.listeners.JunitListener</value>
								</property>
							</properties>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
