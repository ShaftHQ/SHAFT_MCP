name: Sync Project Version with SHAFT Engine

# Triggers on pushes to main branch when pom.xml is modified
on:
  push:
    branches: [ main ]
    paths: 
      - 'pom.xml'
  workflow_dispatch:

jobs:
  sync-versions:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5
        with:
          # Use a PAT to ensure the workflow can trigger other workflows
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: '21'
          distribution: 'zulu'
          check-latest: true
          
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.5

      - name: Extract versions from pom.xml
        run: |
          # Get current project version and SHAFT Engine version from pom.xml
          CURRENT_PROJECT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          SHAFT_ENGINE_VERSION=$(mvn help:evaluate -Dexpression=shaft_engine.version -q -DforceStdout)
          
          echo "Current project version: $CURRENT_PROJECT_VERSION"
          echo "SHAFT Engine version: $SHAFT_ENGINE_VERSION"
          
          # Set environment variables
          echo "CURRENT_PROJECT_VERSION=$CURRENT_PROJECT_VERSION" >> $GITHUB_ENV
          echo "SHAFT_ENGINE_VERSION=$SHAFT_ENGINE_VERSION" >> $GITHUB_ENV
          
      - name: Check if versions need sync
        id: check_sync
        run: |
          if [ "$CURRENT_PROJECT_VERSION" != "$SHAFT_ENGINE_VERSION" ]; then
            echo "Versions are out of sync. Project: $CURRENT_PROJECT_VERSION, Engine: $SHAFT_ENGINE_VERSION"
            echo "sync_needed=true" >> $GITHUB_OUTPUT
          else
            echo "Versions are already in sync: $CURRENT_PROJECT_VERSION"
            echo "sync_needed=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Update project version in pom.xml
        if: steps.check_sync.outputs.sync_needed == 'true'
        run: |
          # Update project version to match SHAFT Engine version
          sed -i "s|<version>$CURRENT_PROJECT_VERSION</version>|<version>$SHAFT_ENGINE_VERSION</version>|g" pom.xml
          echo "Updated pom.xml project version to $SHAFT_ENGINE_VERSION"
          
      - name: Update version in Dockerfile
        if: steps.check_sync.outputs.sync_needed == 'true'
        run: |
          # Update Dockerfile Maven Central URL
          sed -i "s|SHAFT_MCP/$CURRENT_PROJECT_VERSION/SHAFT_MCP-$CURRENT_PROJECT_VERSION.jar|SHAFT_MCP/$SHAFT_ENGINE_VERSION/SHAFT_MCP-$SHAFT_ENGINE_VERSION.jar|g" Dockerfile
          echo "Updated Dockerfile version to $SHAFT_ENGINE_VERSION"
          
      - name: Update version in application.properties
        if: steps.check_sync.outputs.sync_needed == 'true'
        run: |
          # Update Spring AI MCP server version
          sed -i "s|spring.ai.mcp.server.version=$CURRENT_PROJECT_VERSION|spring.ai.mcp.server.version=$SHAFT_ENGINE_VERSION|g" src/main/resources/application.properties
          echo "Updated application.properties version to $SHAFT_ENGINE_VERSION"
          
      - name: Update version references in readme.md
        if: steps.check_sync.outputs.sync_needed == 'true'
        run: |
          # Update all version references in readme.md
          sed -i "s|SHAFT_MCP-$CURRENT_PROJECT_VERSION|SHAFT_MCP-$SHAFT_ENGINE_VERSION|g" readme.md
          echo "Updated readme.md version references to $SHAFT_ENGINE_VERSION"
          
      - name: Verify changes
        if: steps.check_sync.outputs.sync_needed == 'true'
        run: |
          echo "=== Changes made ==="
          git diff --name-only
          echo "=== Version verification ==="
          grep -n "$SHAFT_ENGINE_VERSION" pom.xml Dockerfile src/main/resources/application.properties readme.md || true
          echo "=== Checking for old version references ==="
          grep -n "$CURRENT_PROJECT_VERSION" pom.xml Dockerfile src/main/resources/application.properties readme.md || echo "No old version references found (expected)"
          
      - name: Create PR with version sync changes
        if: steps.check_sync.outputs.sync_needed == 'true'
        run: |
          # Configure git
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Create a new branch for the changes
          BRANCH_NAME="sync-versions-to-$SHAFT_ENGINE_VERSION"
          git checkout -b "$BRANCH_NAME"
          
          # Stage changes
          git add pom.xml Dockerfile src/main/resources/application.properties readme.md
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            # Commit changes
            git commit -m "🔄 Auto-sync project version to $SHAFT_ENGINE_VERSION

            - Updated project version in pom.xml
            - Updated Dockerfile Maven Central URL
            - Updated application.properties MCP server version
            - Updated readme.md version references
            
            This automated update keeps all version references in sync with the SHAFT Engine version."
            
            # Push changes to the new branch
            git push origin "$BRANCH_NAME"
            echo "Changes committed and pushed to branch $BRANCH_NAME"
            
            # Create a pull request using GitHub CLI
            PR_BODY="## Version Sync Update

            This automated PR syncs the project version with the SHAFT Engine version.

            ### Changes
            - ✅ Updated project version in \`pom.xml\` from \`$CURRENT_PROJECT_VERSION\` to \`$SHAFT_ENGINE_VERSION\`
            - ✅ Updated Dockerfile Maven Central URL
            - ✅ Updated \`application.properties\` MCP server version
            - ✅ Updated \`readme.md\` version references

            ### Review
            Please review and merge this PR to complete the version sync process."
            
            gh pr create \
              --title "🔄 Auto-sync project version to $SHAFT_ENGINE_VERSION" \
              --body "$PR_BODY" \
              --base main \
              --head "$BRANCH_NAME"
            
            echo "Pull request created successfully"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create summary
        run: |
          if [ "${{ steps.check_sync.outputs.sync_needed }}" == "true" ]; then
            echo "✅ **Version Sync PR Created**" >> $GITHUB_STEP_SUMMARY
            echo "- Project version will be updated from \`$CURRENT_PROJECT_VERSION\` to \`$SHAFT_ENGINE_VERSION\`" >> $GITHUB_STEP_SUMMARY
            echo "- A pull request has been created for review and merge" >> $GITHUB_STEP_SUMMARY
            echo "- Updated files: pom.xml, Dockerfile, application.properties, readme.md" >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ **No Sync Needed**" >> $GITHUB_STEP_SUMMARY
            echo "- Project version (\`$CURRENT_PROJECT_VERSION\`) already matches SHAFT Engine version" >> $GITHUB_STEP_SUMMARY
          fi
